<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Thinking...]]></title>
  <link href="http://kaihaodir.github.io/atom.xml" rel="self"/>
  <link href="http://kaihaodir.github.io/"/>
<<<<<<< HEAD
  <updated>2016-03-15T01:00:20+08:00</updated>
=======
  <updated>2016-03-13T17:58:49+08:00</updated>
>>>>>>> 0fd83b41d5bcfeee37f1c3857beb7029ea6a0e60
  <id>http://kaihaodir.github.io/</id>
  <author>
    <name><![CDATA[Kai]]></name>
    <email><![CDATA[kaihaodir@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Arc下NSException有可能会内存泄露]]></title>
    <link href="http://kaihaodir.github.io/blog/2016/03/13/arc-nsexception-cause-memory-leak/"/>
    <updated>2016-03-13T17:00:52+08:00</updated>
    <id>http://kaihaodir.github.io/blog/2016/03/13/arc-nsexception-cause-memory-leak</id>
    <content type="html"><![CDATA[<p>在使用Instrumnents对程序进行内存测试的时候，发现有几处异常处理的地方提示内存泄露。经过分析得知，<strong>因为异常处理，改变代码执行路径，导致编译生成的 release 代码没有执行</strong>。</p>

<p>简单写了些测试代码验证：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)viewDidLoad {
</span><span class='line'>    
</span><span class='line'>    [super viewDidLoad];
</span><span class='line'>    
</span><span class='line'>    @try {
</span><span class='line'>        NSMutableArray *stringList = [[NSMutableArray alloc] init];
</span><span class='line'>        for (int i = 0; i &lt; 100; i++) {
</span><span class='line'>            [stringList addObject: @"string instance."];
</span><span class='line'>        }
</span><span class='line'>        [self throwException];
</span><span class='line'>    }
</span><span class='line'>    @catch (NSException *exception) {
</span><span class='line'>        NSLog(@"catch Exception : %@", exception);
</span><span class='line'>    }
</span><span class='line'>    @finally {
</span><span class='line'>        
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)throwException
</span><span class='line'>{
</span><span class='line'>    [NSException raise:@"An Exception." format:@"Exception Description."];
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>反复进出这个页面几次后，在Instruments上果然看到提示内存泄露，而且泄露的地方就指明是 <code>@try{ }</code> 里面创建的对象。</p>

<p><img src="./exception-memory-leak.png" alt="img" /></p>
<<<<<<< HEAD

<h4>解决思路</h4>

<p>1, 尽量不要在@try{}里面有操作，导致对象的引用引用计数增加。<code>@try{ }</code> 语句块里面只有有可能抛出异常的语句。</p>

<p><strong>修改后的代码:</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)viewDidLoad {
</span><span class='line'>    
</span><span class='line'>    [super viewDidLoad];
</span><span class='line'>    
</span><span class='line'>    NSMutableArray *stringList = [[NSMutableArray alloc] init];
</span><span class='line'>    for (int i = 0; i &lt; 100; i++) {
</span><span class='line'>        [stringList addObject: @"string instance."];
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    @try {
</span><span class='line'>        [self throwException];
</span><span class='line'>    }
</span><span class='line'>    @catch (NSException *exception) {
</span><span class='line'>        NSLog(@"catch Exception : %@", exception);
</span><span class='line'>    }
</span><span class='line'>    @finally {
</span><span class='line'>        
</span><span class='line'>    }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>最后用Instruments检查一下，一切正常了。</p>

<p>2, 查看了苹果的开发文档，发现有这么一段描述:</p>

<blockquote><pre><code>By default in Objective C, ARC is not exception-safe for normal releases:
It does not end the lifetime of __strong variables when their scopes are abnormally terminated by an exception.
It does not perform releases which would occur at the end of a full-expression if that full-expression throws an exception.
A program may be compiled with the option -fobjc-arc-exceptions in order to enable these, or with the option -fno-objc-arc-exceptions to explicitly disable them, with the last such argument “winning”.
</code></pre></blockquote>
=======
>>>>>>> 0fd83b41d5bcfeee37f1c3857beb7029ea6a0e60
]]></content>
  </entry>
  
</feed>
